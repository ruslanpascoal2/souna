{"version":3,"sources":["music/Notes.js","music/components/Keyboard.js","music/Music.js","App.js","reportWebVitals.js","index.js"],"names":["keys","note","blackKeyNext","keyMap","Keyboard","synth","useEffect","Tone","toDestination","fromEvent","document","pipe","map","x","key","distinctUntilChanged","subscribe","ev","playNote","stop","keyPressed","_note","match","find","triggerAttack","dispose","onKeyDown","event","id","className","style","keyboardStyles","general","controlSection","width","borderRight","src","filter","height","background","keysSection","onMouseUp","onMouseDown","blackKeys","backgroundColor","paddingTop","borderLeft","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","padding","display","borderRadius","position","cursor","zIndex","right","top","Music","useState","currentNote","setCurrentNote","onClick","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea83528d.chunk.js","sourcesContent":["const notes_2 = [\"C2\", \"D2\", \"E2\", \"F2\", \"G2\", \"A2\", \"B2\"];\r\nconst notes_3 = [\"C3\", \"D3\", \"E3\", \"F3\", \"G3\", \"A3\", \"B3\"];\r\nconst notes_4 = [\"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\"];\r\nconst notes_5 = [\"C5\", \"D5\", \"E5\", \"F5\", \"G5\", \"A5\", \"B5\"];\r\n\r\nexport const keys = [\r\n    { note: \"C3\", blackKeyNext: \"C#3\", keyMap: \"z\" },\r\n    { note: \"D3\", blackKeyNext: \"D#3\", keyMap: \"x\" },\r\n    { note: \"E3\", blackKeyNext: false, keyMap: \"c\" },\r\n    { note: \"F3\", blackKeyNext: \"F#3\", keyMap: \"v\" },\r\n    { note: \"G3\", blackKeyNext: \"G#3\", keyMap: \"b\" },\r\n    { note: \"A3\", blackKeyNext: \"A#3\", keyMap: \"n\" },\r\n    { note: \"B3\", blackKeyNext: false, keyMap: \"m\" },\r\n    { note: \"C4\", blackKeyNext: \"C#4\", keyMap: \",\" },\r\n    { note: \"D4\", blackKeyNext: \"D#4\", keyMap: \".\" },\r\n    { note: \"E4\", blackKeyNext: false, keyMap: \"a\" },\r\n    { note: \"F4\", blackKeyNext: \"F#4\", keyMap: \"s\" },\r\n    { note: \"G4\", blackKeyNext: \"G#4\", keyMap: \"d\" },\r\n    { note: \"A4\", blackKeyNext: \"A#4\", keyMap: \"f\" },\r\n    { note: \"B4\", blackKeyNext: false, keyMap: \"g\" }\r\n];\r\n\r\nexport const Notes = [...notes_2, ...notes_3, ...notes_4, ...notes_5];","import './Keyboard.scss';\r\nimport { keys } from \"../Notes\";\r\nimport * as Tone from 'tone'\r\nimport { useEffect } from 'react';\r\nimport { distinct, distinctUntilChanged, distinctUntilKeyChanged, fromEvent, map, tap } from 'rxjs';\r\n\r\nexport function Keyboard() {\r\n    let synth;\r\n    useEffect(() => {\r\n        synth = new Tone.AMSynth().toDestination();\r\n\r\n        fromEvent(document, \"keydown\").pipe(\r\n            map(x => x.key),\r\n            distinctUntilChanged()\r\n        )\r\n        .subscribe((ev) => {\r\n            playNote(null, ev)\r\n        })\r\n\r\n        fromEvent(document, \"keyup\").pipe(\r\n            distinctUntilChanged()\r\n        )\r\n        .subscribe(() => stop())\r\n    })  \r\n\r\n    const playNote = (note, keyPressed) => {\r\n        let _note;\r\n\r\n        if(keyPressed){\r\n            let match = keys.find(x => x.keyMap === keyPressed);\r\n            _note = match ? match.note : null; \r\n        }\r\n        else{\r\n            _note = note;\r\n        }\r\n\r\n        if(!_note) return;\r\n        synth = new Tone.AMSynth().toDestination();\r\n        synth.triggerAttack(_note, \"8n\");\r\n    }\r\n\r\n    const stop = () => {\r\n        synth.dispose();\r\n    }\r\n\r\n    return (\r\n            <div\r\n            onKeyDown={(event) => playNote(event)} \r\n            id=\"keyboard\" className=\"card flex justify-center flex-col items-center\" style={keyboardStyles.general}>\r\n                <div style={keyboardStyles.controlSection} className=\"flex\">\r\n                    <div className=\"flex flex-col\" style={{ width: \"30%\", borderRight: \"2px solid #8d8d8d\" }}>\r\n                        <div className=\"p-6\">\r\n                            <img src=\"roland.png\" style={{ filter: 'opacity(0.5)', height: \"50px\" }}></img>\r\n                        </div>\r\n                        <div style={{ height: \"6px\", width: \"100%\", background: \"#8e8e8e\" }}></div>\r\n                    </div>\r\n                    <div className=\"flex flex-col\" style={{ width: \"70%\", }}>\r\n                        <div className=\"p-6\">\r\n                            <div style={{ height: \"50px\" }}></div>\r\n                        </div>\r\n                        <div style={{ height: \"6px\", width: \"100%\", background: \"rgb(245 129 35 / 40%)\" }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex\" style={keyboardStyles.keysSection}>\r\n                    <div style={keyboardStyles.keys}>\r\n                        {\r\n                            keys.map(x => <div key={x.note} className=\"key-wrapper\">\r\n                                <div \r\n                                onMouseUp={stop} \r\n                                onMouseDown={() => playNote(x.note)}\r\n                                style={keyboardStyles.keys.key} className=\"key\">\r\n                                </div>\r\n                                {\r\n                                    x.blackKeyNext && \r\n                                    <div className=\"black-key\"\r\n                                    onMouseUp={stop} onMouseDown={() => playNote(x.blackKeyNext)}\r\n                                    style={keyboardStyles.keys.blackKeys}></div>\r\n                                }\r\n                            </div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst keyboardStyles = {\r\n    general: {\r\n        backgroundColor: \"rgb(32 32 32)\",\r\n        height: \"500px\",\r\n        width: \"900px\",\r\n        paddingTop: \"0\"\r\n    },\r\n    controlSection: {\r\n        backgroundColor: \"rgb(88 88 88)\",\r\n        width: \"90%\",\r\n        height: \"50%\",\r\n        borderLeft: \"4px solid #222\",\r\n        borderRight: \"4px solid #222\",\r\n        borderBottom: \"30px solid #252423\",\r\n        borderBottomLeftRadius: \"4px\",\r\n        borderBottomRightRadius: \"4px\"\r\n    },\r\n    keysSection: {\r\n        backgroundColor: \"rgb(32 32 32)\",\r\n        width: \"90%\",\r\n        height: \"50%\",\r\n        padding: \"0 8px\"\r\n    },\r\n    keys: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        key: {\r\n            background: \"#fff\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRight: \"2px solid #ebebeb\",\r\n            borderBottom: \"10px solid #a1a1a1\",\r\n            borderRadius: \"2px\",\r\n            position: \"relative\",\r\n            cursor: 'pointer'\r\n        },\r\n        blackKeys: {\r\n            background: \"#111\",\r\n            zIndex: \"100\",\r\n            width: \"50%\",\r\n            height: \"60%\",\r\n            borderRight: \"2px solid #ebebeb\",\r\n            borderBottom: \"10px solid rgb(106 106 106)\",\r\n            borderRadius: \"2px\",\r\n            position: \"absolute\",\r\n            right: \"-27%\",\r\n            top: \"0%\",\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n}","import * as Tone from 'tone'\r\nimport { useState, useEffect } from 'react';\r\nimport { Keyboard } from './components/Keyboard';\r\nexport function Music() {\r\n    const [currentNote, setCurrentNote] = useState(\"C5\");\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentNote()\r\n    }, [currentNote]);\r\n\r\n    const play = () => {\r\n\r\n    }\r\n\r\n    const stop = () => {\r\n        Tone.Transport.stop();\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n\r\n            { <div className=\"flex flex-row space-x-4\">\r\n                <button className=\"text-pink\" onClick={() => play()}>play</button>\r\n                <button className=\"text-pink\" onClick={() => stop()}>stop</button>\r\n            </div>\r\n\r\n            \r\n            }\r\n            <section className=\"px-4 py-8\">\r\n                 {/* <Pattern />  */}\r\n                <Keyboard />\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// function getRandomInt(min, max) {\r\n//     min = Math.ceil(min);\r\n//     max = Math.floor(max);\r\n//     return Math.floor(Math.random() * (max - min + 1)) + min;\r\n// }\r\n\r\n","import './App.scss';\nimport {Music} from './music/Music';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Music />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}